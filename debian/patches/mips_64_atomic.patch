diff --git a/configure.cmake b/configure.cmake
index 0057c7f..548b720 100644
--- a/configure.cmake
+++ b/configure.cmake
@@ -128,7 +128,7 @@ IF(UNIX)
   ENDIF()
   FIND_PACKAGE(Threads)
 
-  SET(CMAKE_REQUIRED_LIBRARIES 
+  SET(CMAKE_REQUIRED_LIBRARIES ${EXTRA_REQ_LIBRARIES}
     ${LIBM} ${LIBNSL} ${LIBBIND} ${LIBCRYPT} ${LIBSOCKET} ${LIBDL} ${CMAKE_THREAD_LIBS_INIT} ${LIBRT} ${LIBEXECINFO})
   # Need explicit pthread for gcc -fsanitize=address
   IF(CMAKE_USE_PTHREADS_INIT AND CMAKE_C_FLAGS MATCHES "-fsanitize=")
diff --git a/include/atomic/gcc_builtins.h b/include/atomic/gcc_builtins.h
index 56a0323..f5263f6 100644
--- a/include/atomic/gcc_builtins.h
+++ b/include/atomic/gcc_builtins.h
@@ -16,6 +16,7 @@
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA */
 
+#if defined (HAVE_GCC_ATOMIC_BUILTINS)
 #define make_atomic_add_body(S)                     \
   v= __sync_fetch_and_add(a, v);
 #define make_atomic_fas_body(S)                     \
@@ -26,6 +27,20 @@
   sav= __sync_val_compare_and_swap(a, cmp_val, set);\
   if (!(ret= (sav == cmp_val))) *cmp= sav
 
+#elif defined(HAVE_GCC_C11_ATOMICS)
+
+#define make_atomic_add_body(S)                     \
+  __atomic_add_fetch(a, v, __ATOMIC_SEQ_CST)
+#define make_atomic_fas_body(S)                     \
+  v= __atomic_exchange_n(a, v, __ATOMIC_SEQ_CST)
+#define make_atomic_cas_body(S)                     \
+  int ## S sav;                                     \
+  ret= __atomic_compare_exchange_n(a, cmp, set,     \
+                                   0,               \
+                                   __ATOMIC_SEQ_CST,\
+                                   __ATOMIC_SEQ_CST);
+#endif
+
 #ifdef MY_ATOMIC_MODE_DUMMY
 #define make_atomic_load_body(S)   ret= *a
 #define make_atomic_store_body(S)  *a= v
diff --git a/include/atomic/nolock.h b/include/atomic/nolock.h
index 2137445..2ad7d98 100644
--- a/include/atomic/nolock.h
+++ b/include/atomic/nolock.h
@@ -17,7 +17,7 @@
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA */
 
 #if defined(__i386__) || defined(_MSC_VER) || defined(__x86_64__)   \
-    || defined(HAVE_GCC_ATOMIC_BUILTINS) \
+    || defined(HAVE_GCC_ATOMIC_BUILTINS) || defined(HAVE_GCC_C11_ATOMICS) \
     || defined(HAVE_SOLARIS_ATOMIC)
 
 #  ifdef MY_ATOMIC_MODE_DUMMY
@@ -41,7 +41,7 @@
 #  elif __GNUC__
 #    if defined(HAVE_SOLARIS_ATOMIC)
 #      include "solaris.h"
-#    elif defined(HAVE_GCC_ATOMIC_BUILTINS)
+#    elif defined(HAVE_GCC_ATOMIC_BUILTINS) || defined(HAVE_GCC_C11_ATOMICS)
 #      include "gcc_builtins.h"
 #    elif defined(__i386__) || defined(__x86_64__)
 #      include "x86-gcc.h"
diff --git a/mysys/CMakeLists.txt b/mysys/CMakeLists.txt
index 0d40458..a45a2f8 100644
--- a/mysys/CMakeLists.txt
+++ b/mysys/CMakeLists.txt
@@ -78,6 +78,10 @@ IF(HAVE_BFD_H)
   TARGET_LINK_LIBRARIES(mysys bfd)  
 ENDIF(HAVE_BFD_H)
 
+IF (EXTRA_REQ_LIBRARIES MATCHES "atomic")
+  TARGET_LINK_LIBRARIES(mysys atomic)
+ENDIF()
+
 IF (WIN32)
   TARGET_LINK_LIBRARIES(mysys IPHLPAPI)  
 ENDIF(WIN32)
diff --git a/sql/CMakeLists.txt b/sql/CMakeLists.txt
index ec7e920..2bb175c 100644
--- a/sql/CMakeLists.txt
+++ b/sql/CMakeLists.txt
@@ -171,6 +171,10 @@ TARGET_LINK_LIBRARIES(sql ${MYSQLD_STATIC_PLUGIN_LIBS}
   ${SSL_LIBRARIES}
   ${LIBSYSTEMD})
 
+IF (EXTRA_REQ_LIBRARIES MATCHES "atomic")
+  TARGET_LINK_LIBRARIES(sql atomic)
+ENDIF()
+
 IF(WIN32)
   SET(MYSQLD_SOURCE main.cc nt_servc.cc nt_servc.h message.rc)
   TARGET_LINK_LIBRARIES(sql psapi)
